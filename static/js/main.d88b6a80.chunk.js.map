{"version":3,"sources":["components/detailedPost.js","components/post.js","components/postList.js","components/postContainer.js","App.js","reportWebVitals.js","index.js"],"names":["DetailedPost","location","useLocation","history","useHistory","useState","commentDetails","setDetails","showDetails","setShowDetails","fetchComments","fromPostId","a","fetch","response","json","data","console","log","useEffect","undefined","state","Container","Card","Header","Body","Title","fromPostTitle","Text","fromPostBody","map","comment","border","style","width","id","body","email","onClick","goBack","post","postData","bg","to","pathname","title","fromPostUserId","userId","color","postList","this","props","posts","Component","PostContainer","setPosts","res","fetchTasks","CardDeck","App","component","PostsContainer","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d88b6a80.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { Card } from 'react-bootstrap';\n\n\nconst DetailedPost = () => {\n\n    const location = useLocation();\n    const history = useHistory();\n    const [ commentDetails, setDetails ] = useState([]);\n    const [ showDetails, setShowDetails ] = useState(false);\n    \n\n    const fetchComments = async (fromPostId) => {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${fromPostId}`);\n      const data = await response.json()\n\n      setDetails(data);\n  if (response.data !== '')\n  {\n      console.log(data);\n      //console.log(postDetails);\n  }\n    };\n\n    useEffect(() => {\n    if(location.state !== undefined){\n      const { fromPostId } = location.state;\n      console.log(fromPostId);\n      fetchComments(fromPostId);\n      setShowDetails(true);\n    }\n  }, []);\n\n   \n \n\n\n\nif (showDetails === true)\n{\n  \n  return (\n\n<div>\n<Container>\n<Card>\n  <Card.Header>Post: {location.state.fromPostId}</Card.Header>\n  <Card.Body>\n    <Card.Title>{location.state.fromPostTitle}</Card.Title>\n    <Card.Text>\n    {location.state.fromPostBody}\n    </Card.Text>\n  </Card.Body>\n</Card>\n\n\n\n\n<h3><em>Comment section</em></h3>\n\n\n{commentDetails.map((comment) => (\n\n<Card border=\"light\" style={{ width: '39rem' }}>\n    <Card.Header>Comment: {comment.id}</Card.Header>\n    <Card.Body>\n           <Card.Text>\n      Comment Body: {comment.body}\n      </Card.Text>\n       <Card.Title>{comment.email}</Card.Title>\n\n    </Card.Body>\n  </Card>\n\n\n\n\n\n))}\n\n<button onClick={history.goBack}>Go Back</button>\n\n\n</Container>\n\n</div>\n\n  )\n\n}\nelse\n{\n\n  return (\n    <Container>\n      <h1>This is else Block</h1>\n    \n    \n\n<h1>Content is unavailable currently.</h1>\n      \n    </Container>\n  )\n\n\n\n}  \n\n\n\n}\n\nexport default DetailedPost;\n\n","import { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react'\n\nconst post = ({postData}) => {\n    return (\n        <div>\n            <Card border=\"dark\" style={{ width: '81rem' }} bg={'secondary'} >\n    \n<Card body>\n\n             <Link to={{\n      pathname: '/postDetails',\n      state: {\n        fromPostId: postData.id,\n        fromPostTitle: postData.title,\n        fromPostBody: postData.body,\n        fromPostUserId: postData.userId\n      }\n    }}  style={{ color: '#000' }}> \n<h4>{postData.title}</h4>\n  \n      </Link>\n\n</Card>\n\n\n            </Card>\n                   </div>\n    )\n}\n\nexport default post\n","import React, { Component } from 'react'\nimport Post from './post';\n\nexport class postList extends Component {\n    render() {\n         return this.props.posts.map((post) => (\n            <div>\n           \n                <Post key={post.id} postData={post} />\n                </div>\n        ));\n    }\n}\n\nexport default postList;\n","import {React, useState, useEffect} from 'react'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PostList from './postList';\nimport { Card } from 'react-bootstrap';\n\n\nfunction PostContainer() {\n\n  const [posts, setPosts] = useState([]);\n\n\n\nuseEffect(() => {\n  const fetchTasks = async () => {\n   const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n    const data = await res.json()\nsetPosts(data);\n\n  }\n\nfetchTasks();\n\n}, [])\n\n  return (\n\n\n<div>\n    <Card>\n    <Card.Header><h2><em>List of Posts from provided API </em></h2></Card.Header>\n    </Card>\n\n\n<CardDeck>\n<PostList posts={posts}/>\n</CardDeck>\n</div>\n  );\n}\n\nexport default PostContainer;\n  ","import DetailedPost from './components/detailedPost';\nimport PostsContainer from './components/postContainer';\nimport { Route } from 'react-router-dom'\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n\n\n  return (\n\n\n<div>\n\n<BrowserRouter>\n<Switch>\n<Route component={PostsContainer} path=\"/\" exact />  \n<Route component={DetailedPost} path=\"/postDetails\" exact />\n</Switch>\n</BrowserRouter>\n\n\n</div>\n  );\n}\n\nexport default App;\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}